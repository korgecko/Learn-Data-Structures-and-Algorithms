# -----------------------------------------------------------------
# 입력 부분
# -----------------------------------------------------------------
n, m = map(int, input().split())
array = list(map(int, input().split()))

# -----------------------------------------------------------------
# 이진 탐색을 위한 초기 설정
# -----------------------------------------------------------------
start = 0
end = max(array)
result = 0

print("==================== 이진 탐색 시작 ====================")
print(f"초기 설정 -> 탐색 범위: [{start}, {end}], 요청 길이(M): {m}\n")

iteration = 1  # 몇 번째 탐색인지 확인하기 위한 변수

# -----------------------------------------------------------------
# 이진 탐색 수행 (while 반복문)
# -----------------------------------------------------------------
while start <= end:
    print(f"--- [ {iteration}번째 탐색 ] ---")

    # 1. 중간점(mid)을 현재 탐색의 '절단기 높이'로 설정합니다.
    mid = (start + end) // 2
    print(f"현재 탐색 범위: [{start}, {end}]")
    print(f"중간점(mid) 계산: ({start} + {end}) // 2 = {mid}")

    # 2. 현재 절단기 높이(mid)로 잘랐을 때 얻는 떡의 총 길이를 계산합니다.
    total = 0
    calculation_log = []  # 계산 과정을 보여주기 위한 로그
    for x in array:
        if x > mid:
            remaining = x - mid
            total += remaining
            calculation_log.append(f"({x}-{mid})")

    print(f"'{mid}' 높이로 잘랐을 때 얻는 떡의 총 길이: {' + '.join(calculation_log)} = {total}")

    # 3. 계산된 떡의 총 길이(total)를 손님의 요청(m)과 비교하여 탐색 범위를 조절합니다.
    if total >= m:
        print(f"판단: {total} >= {m} (요청 길이 충족 O)")
        result = mid
        print(f"-> 현재 높이({mid})는 정답 후보이므로 result를 {result}로 업데이트합니다.")
        print("-> '최대' 높이를 찾아야 하므로, 더 높은 높이를 탐색하기 위해 start를 오른쪽으로 이동합니다.")
        start = mid + 1

    else:  # total < m
        print(f"판단: {total} < {m} (요청 길이 충족 X)")
        print("-> 떡이 부족하므로, 더 많은 떡을 얻기 위해 절단기 높이를 낮춰야 합니다.")
        print("-> 탐색 범위를 왼쪽으로 이동합니다.")
        end = mid - 1

    print("-" * (20 + len(str(iteration))))  # 구분선
    iteration += 1

# -----------------------------------------------------------------
# 결과 출력
# -----------------------------------------------------------------
print("\n==================== 이진 탐색 종료 ====================")
print(f"최종 탐색 범위: [{start}, {end}] (start가 end보다 커져서 루프 종료)")
print(f"따라서, 조건을 만족하는 최대 높이는 마지막으로 저장된 result 값입니다.")
print(f"\n최종 결과: {result}")
