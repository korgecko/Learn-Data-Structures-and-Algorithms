# 정렬할 원본 리스트를 정의합니다.
array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]

# --- 1단계: 계수(count)를 기록할 리스트 생성 ---
# array의 최댓값(9)에 1을 더한 크기(10)만큼의 리스트를 생성합니다.
# 인덱스 0부터 9까지의 공간이 만들어지며, 모든 값은 0으로 초기화됩니다.
# 이 리스트는 각 숫자가 몇 번 등장했는지를 기록하는 용도로 사용됩니다.
# count 리스트: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
count = [0] * (max(array) + 1)

# --- 2단계: 각 숫자의 개수 세기 ---
# 원본 리스트(array)의 길이만큼 반복합니다.
for i in range(len(array)):
    # array의 i번째 원소를 인덱스로 사용하여 count 리스트의 값을 1 증가시킵니다.
    # 예: array[0]은 7이므로, count[7]의 값이 1 증가합니다.
    #     array[1]은 5이므로, count[5]의 값이 1 증가합니다.
    #     ...
    # 이 과정을 반복하면 count 리스트에는 각 숫자의 등장 횟수가 저장됩니다.
    count[array[i]] += 1

# 2단계 완료 후 count 리스트의 상태:
# index: 0  1  2  3  4  5  6  7  8  9
# value: 2  2  2  1  1  2  1  1  1  2
# (의미: 숫자 0은 2번, 1은 2번, 2는 2번 ... 9는 2번 등장)

# --- 3단계: 결과 출력 ---
# count 리스트의 길이(0부터 9까지)만큼 반복합니다. (i는 0, 1, 2, ..., 9 순서로 증가)
for i in range(len(count)):
    # count[i]에 저장된 값(i라는 숫자의 등장 횟수)만큼 내부 반복문을 실행합니다.
    for j in range(count[i]):
        # 예: i가 0일 때, count[0]은 2이므로 내부 반복문은 2번 실행됩니다.
        #     이때 숫자 i(즉, 0)를 두 번 출력합니다.
        #     i가 1일 때, count[1]은 2이므로 숫자 1을 두 번 출력합니다.
        #     ...
        # 이 과정을 통해 count 리스트에 기록된 횟수만큼 각 숫자를 순서대로 출력하게 됩니다.
        print(i, end= ' ')
